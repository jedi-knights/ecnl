# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI

on:
  workflow_dispatch: null

  push:
    branches:
      - '**'

env:
  GO_VERSION: 1.21.2

jobs:
  Analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - name: Install Dependencies
        run: |
            curl -Lo hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
            chmod +x hadolint
            make deps

      - name: Lint Dockerfile
        run: ./hadolint Dockerfile

      - name: Generate Mocks
        run: make mocks

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54

  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Dependencies
        run: make deps

      - name: Generate Mocks
        run: make mocks

      - name: Test
        run: make test

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/junit.xml'
          fail_on_failure: true
          require_tests: true
          annotate_notice: false
          detailed_summary: false

  Build:
    needs: [Analyze, Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Dependencies
        run: make deps

      - name: Build
        run: make build

      - name: Run Semantic Release
        uses: go-semantic-release/action@v1
        with:
            hooks: goreleaser
            github-token: ${{ secrets.GITHUB_TOKEN }}
            update-file: VERSION
            allow-initial-development-versions: true
            prepend: true
            changelog-file: CHANGELOG.md
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: COPY SSL Certificates
        run: |
          mkdir -p /usr/local/share/ca-certificates
          cp ./certs/*.crt /usr/local/share/ca-certificates
          update-ca-certificates
          echo "$CERT_CONTENT" > /usr/local/share/ca-certificates/localhost.crt
          echo "$CERT_KEY" > /usr/local/share/ca-certificates/localhost.key

      - name: Log in to Docker Hub
        run: |
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: make docker-build

      - name: Tag Docker Image
        run: make docker-tag

      - name: Push Docker Image
        run: make docker-push

  Release:
    needs: [Build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Set Git User
        run: |
          git config --global user.email "omar.crosby@gmail.com"
          git config --global user.name "Omar Crosby"


